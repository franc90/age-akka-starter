group 'org.age'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'org.testng:testng:+'
    testCompile 'org.mockito:mockito-all:+'
    testCompile 'org.assertj:assertj-core:+'
    testCompile 'org.assertj:assertj-guava:+'
    compile 'com.typesafe.akka:akka-remote_2.11:2.4.0'
    compile 'com.typesafe.akka:akka-cluster_2.11:2.4.0'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'com.google.guava:guava:+'
    compile 'org.slf4j:slf4j-api:+'
    compile 'org.slf4j:jcl-over-slf4j:+'
    compile 'ch.qos.logback:logback-classic:+'

    compile 'javax.inject:javax.inject:1'
    compile 'org.springframework:spring-context:+'
    compile 'org.springframework:spring-test:+'
    compile('com.hazelcast:hazelcast:+') {
        // Not needed and would introduce a lot of duplicated annotations
        exclude group: 'net.sourceforge.findbugs'
    }
    compile 'com.hazelcast:hazelcast-spring:+'

    runtime 'org.codehaus.groovy:groovy-all:+'

}

task cluster(type: JavaExec) {
    main = 'org.age.akka.ClusterManager'
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
    } else {
        args '2551'
    }
}

task client(type: JavaExec) {
    main = 'org.age.akka.WorkerNode'
    classpath = sourceSets.main.runtimeClasspath
    args = ['0', '0']
}